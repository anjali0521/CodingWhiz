{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/aboutUs/about.component.ts","webpack:///src/app/shared/aboutUs/about.component.html","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/student-dashboard/student-calendar/student-calendar.component.ts","webpack:///src/app/student-registration/student-registration-form/student-registration-form.component.ts","webpack:///src/app/student-registration/student-registration-form/student-registration-form.component.html","webpack:///src/app/video-conferencing/video-conference/video-conference.component.ts","webpack:///src/app/video-conferencing/video-conference/video-conference.component.html","webpack:///src/app/welcome-page/welcome-page-form/welcome-page.component.ts","webpack:///src/app/welcome-page/welcome-page-form/welcome-page.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","appRoutingModule","forRoot","imports","AppComponent","router","title","selector","templateUrl","styleUrls","agoraConfig","AppID","AppModule","declarations","providers","bootstrap","AboutComponent","navigateByUrl","register","login","FooterComponent","HeaderComponent","colors","red","primary","secondary","blue","yellow","StudentCalendarComponent","changeDetection","OnPush","StudentRegistrationFormComponent","fb","studentRegistrationForm","group","required","email","form","console","log","onFormSubmit","VideoConferenceComponent","ngxAgoraService","localCallId","remoteCalls","uid","Math","floor","random","client","createClient","mode","codec","assignClientHandlers","localStream","createStream","streamID","audio","video","screen","assignLocalStreamHandlers","initLocalStream","join","publish","error","onSuccess","onFailure","err","on","LocalStreamPublished","evt","reason","renewChannelKey","renewError","RemoteStreamAdded","stream","subscribe","RemoteStreamSubscribed","getRemoteId","length","push","setTimeout","play","RemoteStreamRemoved","stop","getId","PeerLeave","filter","call","MediaAccessAllowed","MediaAccessDenied","init","WelcomePageComponent","welcomeForm","goToStudentRegistration","environment","production","agora","appId","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentRegistrationFormComponent } from 'src/app/student-registration/student-registration-form/student-registration-form.component';\nimport { WelcomePageComponent } from './welcome-page/welcome-page-form/welcome-page.component';\nimport { VideoConferenceComponent } from './video-conferencing/video-conference/video-conference.component';\n\nconst routes: Routes = [\n  { path: 'login', component: WelcomePageComponent},\n  { path: '', redirectTo: 'sign', pathMatch: 'full'},\n  { path: 'registerStudent', component: StudentRegistrationFormComponent},\n  { path: 'classroom', component: VideoConferenceComponent} \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n appRoutingModule = RouterModule.forRoot(routes);\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {MatMenuModule} from '@angular/material/menu';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tech Academy';\n\n  constructor(private router:Router) { \n      \n  }\n}\n","<!-- header -->\n<app-header></app-header>\n\n\n<app-aboutUs></app-aboutUs>\n\n<!-- pages are been eplaced here -->\n<router-outlet class=\"bkg\"></router-outlet>\n\n<script>\n  window.watsonAssistantChatOptions = {\n    integrationID: \"da73b339-271e-4adc-845b-246530dff496\", // The ID of this integration.\n    region: \"eu-gb\", // The region your integration is hosted in.\n    serviceInstanceID: \"e20b6dba-f5fd-4c45-b301-314e4f338c55\", // The ID of your service instance.\n    onLoad: function (instance) { instance.render(); }\n  };\n  setTimeout(function () {\n    const t = document.createElement('script');\n    t.src = \"https://web-chat.global.assistant.watson.appdomain.cloud/loadWatsonAssistantChat.js\";\n    document.head.appendChild(t);\n  });\n</script>\n\n<!-- footer -->\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule} from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { WelcomePageComponent } from 'src/app/welcome-page/welcome-page-form/welcome-page.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { StudentRegistrationFormComponent } from 'src/app/student-registration/student-registration-form/student-registration-form.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FooterComponent } from 'src/app/shared/footer/footer.component';\nimport { HeaderComponent } from 'src/app/shared/header/header.component';\nimport { VideoConferenceComponent } from './video-conferencing/video-conference/video-conference.component';\nimport { environment } from 'src/environments/environment';\nimport { NgxAgoraModule } from 'ngx-agora';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { AboutComponent } from 'src/app/shared/aboutUs/about.component';\nimport { StudentCalendarComponent } from 'src/app/student-dashboard/student-calendar/student-calendar.component';\n//import { FlatpickrModule } from 'angularx-flatpickr';\n//import { CalendarModule, DateAdapter } from 'angular-calendar';\n//import { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n//import { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\n\n//to be removed\nimport { AngularAgoraRtcModule, AgoraConfig } from 'angular-agora-rtc'; // Add\nconst agoraConfig: AgoraConfig = {\n  AppID: '5788f0cdbac7418caa9baac2eb30b967',\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomePageComponent,\n    StudentRegistrationFormComponent,\n    HeaderComponent,\n    FooterComponent,\n    VideoConferenceComponent,\n    AboutComponent,\n    StudentCalendarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n   // NgxAgoraModule.forRoot({ AppID: environment.agora.appId }) //uncooment later\n    AngularAgoraRtcModule.forRoot(agoraConfig), // remove,\n    //NgbModalModule,\n    //FlatpickrModule.forRoot(),\n    /*CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),*/ \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-aboutUs',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.css']\n  })\n  export class AboutComponent {\n\n    constructor(private router:Router) { \n    }\n\n    register(){\n      this.router.navigateByUrl('/registerStudent');\n    }\n\n    login(){\n      this.router.navigateByUrl('/login');\n    }\n  }\n  ","<div class=\"outerContainer\">\n\n<div class=\"messageAlign\">\n    <div id=\"first\"><img src=\"assets/image/Logo.png\"></div>\n    <div id=\"second\">\n        <h1>Welcome to 'YoursAcademy'</h1>\n        <h3>A place to fulfill all your Academic needs</h3>\n        <p>Dont Let the fear of Covid stop you... Study from home at your own convience and safely.</p>\n    </div>\n</div>\n<div id=\"clear\"></div>\n<div class=\"messageAlign\"> \n    <button mat-button mat-raised-button color=\"primary\" class=\"marginRight\" (click)=\"register()\">New User</button>\n    <button mat-button mat-raised-button color=\"primary\" class=\"marginRight\" (click)=\"login()\">Login</button>\n</div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.css']\n  })\n  export class FooterComponent {\n   \n  }\n  ","<footer class=\"footer\">\n    <div class=\"container\">\n    <div class=\"content has-text-centered\">\n      <mat-toolbar color=\"primary\" class=\"footerTopMargin\">\n        <h1>\n         footer placeholder\n        </h1>\n      </mat-toolbar>\n    </div>\n    </div>\n</footer>","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n  })\n  export class HeaderComponent {\n    \n  }\n  ","<mat-toolbar color=\"primary\" class=\"toolbarBottomMargin\">\n  <button mat-button [matMenuTriggerFor]=\"menu\">Home</button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item>Your Dashboard</button>\n    <button mat-menu-item>Offered Subjects</button>\n    <button mat-menu-item>About Us</button>\n\n  </mat-menu>\n\n  <button mat-button [matMenuTriggerFor]=\"menu1\">Assesments</button>\n  <mat-menu #menu1=\"matMenu\">\n    <button mat-menu-item>Quiz</button>\n    <button mat-menu-item>Subjective Tests</button>\n    <button mat-menu-item>View Results</button>\n  </mat-menu>\n\n  <button mat-button [matMenuTriggerFor]=\"menu2\">Downloads</button>\n  <mat-menu #menu2=\"matMenu\">\n    <button mat-menu-item>Study Material</button>\n    <button mat-menu-item>Videos</button>\n    <button mat-menu-item>Practice Tests</button>\n    <button mat-menu-item>Syllabus</button>\n  </mat-menu>\n\n  <button mat-button [matMenuTriggerFor]=\"menu3\">Forums</button>\n  <mat-menu #menu3=\"matMenu\">\n    <button mat-menu-item>Discussions</button>\n    <button mat-menu-item>Ask a Question</button>\n  </mat-menu>\n  <button mat-button>Feedback</button>\n  <button mat-button>Pricing</button>\n\n\n  <button mat-button [matMenuTriggerFor]=\"menu4\">Help</button>\n  <mat-menu #menu4=\"matMenu\">\n    <button mat-menu-item>Enquiry</button>\n    <button mat-menu-item>Contact Us</button>\n  </mat-menu>\n\n</mat-toolbar>","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours,\n} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView,\n} from 'angular-calendar';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3',\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF',\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA',\n  },\n};\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['student-calendar.component.css'],\n  templateUrl: 'student-calendar.component.html',\n})\nexport class StudentCalendarComponent {\n /* @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fas fa-fw fa-pencil-alt\"></i>',\n      a11yLabel: 'Edit',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      },\n    },\n    {\n      label: '<i class=\"fas fa-fw fa-trash-alt\"></i>',\n      a11yLabel: 'Delete',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.events = this.events.filter((iEvent) => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      },\n    },\n  ];\n\n  refresh: Subject<any> = new Subject();\n\n  events: CalendarEvent[] = [\n    {\n      start: subDays(startOfDay(new Date()), 1),\n      end: addDays(new Date(), 1),\n      title: 'A 3 day event',\n      color: colors.red,\n      actions: this.actions,\n      allDay: true,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true,\n      },\n      draggable: true,\n    },\n    {\n      start: startOfDay(new Date()),\n      title: 'An event with no end date',\n      color: colors.yellow,\n      actions: this.actions,\n    },\n    {\n      start: subDays(endOfMonth(new Date()), 3),\n      end: addDays(endOfMonth(new Date()), 3),\n      title: 'A long event that spans 2 months',\n      color: colors.blue,\n      allDay: true,\n    },\n    {\n      start: addHours(startOfDay(new Date()), 2),\n      end: addHours(new Date(), 2),\n      title: 'A draggable and resizable event',\n      color: colors.yellow,\n      actions: this.actions,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true,\n      },\n      draggable: true,\n    },\n  ];\n\n  activeDayIsOpen: boolean = true;\n\n  constructor(private modal: NgbModal) { }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n      this.viewDate = date;\n    }\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd,\n  }: CalendarEventTimesChangedEvent): void {\n    this.events = this.events.map((iEvent) => {\n      if (iEvent === event) {\n        return {\n          ...event,\n          start: newStart,\n          end: newEnd,\n        };\n      }\n      return iEvent;\n    });\n    this.handleEvent('Dropped or resized', event);\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    this.modalData = { event, action };\n    this.modal.open(this.modalContent, { size: 'lg' });\n  }\n\n  addEvent(): void {\n    this.events = [\n      ...this.events,\n      {\n        title: 'New event',\n        start: startOfDay(new Date()),\n        end: endOfDay(new Date()),\n        color: colors.red,\n        draggable: true,\n        resizable: {\n          beforeStart: true,\n          afterEnd: true,\n        },\n      },\n    ];\n  }\n\n  deleteEvent(eventToDelete: CalendarEvent) {\n    this.events = this.events.filter((event) => event !== eventToDelete);\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }*/\n}","import { Component, OnInit } from '@angular/core';\n// import custom validator to validate that password and confirm password fields match\nimport { MustMatch } from 'src/app/shared/Validators/must-match.validator';\nimport { FormBuilder, FormGroup, Validators,NgForm } from '@angular/forms'; \nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-student-registration-form',\n    templateUrl: './student-registration-form.component.html',\n    styleUrls: ['./student-registration-form.component.css']\n  })\nexport class StudentRegistrationFormComponent implements OnInit {\n  studentRegistrationForm: FormGroup;  \n  \n      constructor(private fb: FormBuilder, private router:Router) { \n          this.studentRegistrationForm = fb.group({  \n              'userName' : [null, Validators.required],\n              'password' : [null, Validators.required],   \n              'name' : [null, Validators.required],\n              'phoneno' : [null, Validators.required],\n              'email' : [null, [Validators.required, Validators.email]],\n            });\n  \n      }\n      ngOnInit() {\n          \n      }\n      onFormSubmit(form:NgForm){\n          console.log(form); \n      }\n\n     \n  }","<div class=\"alignMatCard\">\n    <mat-card class=\"textAlignCenter\" class=\"matCardBorder\">\n        <mat-card-title class=\"formHeading\">\n            Student Registration Form\n        </mat-card-title>\n        <mat-card-content>\n            <div class=\"container textAlignCenter\">\n                <form [formGroup]=\"studentRegistrationForm\" (ngSubmit)=\"onFormSubmit(studentRegistrationForm.value)\" class=\"form\">\n                    <div class=\"textAlignCenter\">\n\n                        <mat-form-field class=\"form-element\">\n                            <mat-label>Name</mat-label>\n                            <input matInput placeholder=\"Name\" formControlName=\"name\">\n                            <mat-error\n                                *ngIf=\"!studentRegistrationForm.controls['name'].valid && studentRegistrationForm.controls['name'].touched\">\n                                Please enter Full Name\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"form-element\">\n                            <mat-label>Email Id</mat-label>\n                            <input matInput placeholder=\"emailId\" formControlName=\"email\">\n                            <mat-error\n                                *ngIf=\"!studentRegistrationForm.controls['email'].valid && studentRegistrationForm.controls['email'].touched\">\n                                Please enter your email\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"form-element\">\n                            <mat-label>Phone No.</mat-label>\n                            <input matInput placeholder=\"Phone Number\" formControlName=\"phoneno\">\n                            <mat-error\n                                *ngIf=\"!studentRegistrationForm.controls['phoneno'].valid && studentRegistrationForm.controls['phoneno'].touched\">\n                                Please enter Password\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"form-element\">\n                            <mat-label>User Name</mat-label>\n                            <input matInput placeholder=\"User Name\" formControlName=\"userName\">\n                            <mat-error\n                                *ngIf=\"!studentRegistrationForm.controls['userName'].valid && studentRegistrationForm.controls['userName'].touched\">\n                                Please enter User Name\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"form-element\">\n                            <mat-label>Password</mat-label>\n                            <input matInput placeholder=\"Password\" formControlName=\"password\">\n                            <mat-error\n                                *ngIf=\"!studentRegistrationForm.controls['password'].valid && studentRegistrationForm.controls['password'].touched\">\n                                Please enter Password\n                            </mat-error>\n                        </mat-form-field>\n                        \n                    </div>\n                    <div class=\"form-element\">\n                        <button mat-button mat-raised-button color=\"primary\" type=\"submit\"\n                            [disabled]=\"!studentRegistrationForm.valid\" class=\"buttonAlign\"> Register</button>  \n                    </div>\n                </form>\n            </div>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgxAgoraService, Stream, AgoraClient, ClientEvent, StreamEvent } from 'ngx-agora';\n\n@Component({\n  selector: 'app-video-conference',\n  templateUrl: './video-conference.component.html',\n  styleUrls: ['./video-conference.component.css']\n})\nexport class VideoConferenceComponent implements OnInit {\n  title = 'angular-video';\n  localCallId = 'agora_local';\n  remoteCalls: string[] = [];\n\n  private client: AgoraClient;\n  private localStream: Stream;\n  private uid: number;\n\n  constructor(private ngxAgoraService: NgxAgoraService) {\n    this.uid = Math.floor(Math.random() * 100);\n  }\n\n  ngOnInit() {\n    this.client = this.ngxAgoraService.createClient({ mode: 'rtc', codec: 'h264' });\n    this.assignClientHandlers();\n\n    this.localStream = this.ngxAgoraService.createStream({ streamID: this.uid, audio: true, video: true, screen: false });\n    this.assignLocalStreamHandlers();\n\n    // Join and publish methods added in this step\n    this.initLocalStream(() => this.join(uid => this.publish(), error => console.error(error)));\n  }\n\n  /**\n   * Attempts to connect to an online chat room where users can host and receive A/V streams.\n   */\n  join(onSuccess?: (uid: number | string) => void, onFailure?: (error: Error) => void): void {\n    console.log(\"Inside join on anjali\");\n    this.client.join(null, 'foo-bar', this.uid, onSuccess, onFailure);\n  }\n\n  /**\n   * Attempts to upload the created local A/V stream to a joined chat room.\n   */\n  publish(): void {\n    console.log(\"publish anjali\");\n    this.client.publish(this.localStream, err => console.log('Publish local stream error: ' + err));\n  }\n\n  private assignClientHandlers(): void {\n    this.client.on(ClientEvent.LocalStreamPublished, evt => {\n      console.log('Publish local stream successfully');\n    });\n\n    this.client.on(ClientEvent.Error, error => {\n      console.log('Got error msg:', error.reason);\n      if (error.reason === 'DYNAMIC_KEY_TIMEOUT') {\n        this.client.renewChannelKey(\n          '',\n          () => console.log('Renewed the channel key successfully.'),\n          renewError => console.error('Renew channel key failed: ', renewError)\n        );\n      }\n    });\n\n    this.client.on(ClientEvent.RemoteStreamAdded, evt => {\n      const stream = evt.stream as Stream;\n      this.client.subscribe(stream, { audio: true, video: true }, err => {\n        console.log('Subscribe stream failed', err);\n      });\n    });\n\n    this.client.on(ClientEvent.RemoteStreamSubscribed, evt => {\n      console.log(\"remoteStreamSubscribed anjali\");\n      const stream = evt.stream as Stream;\n      const id = this.getRemoteId(stream);\n      if (!this.remoteCalls.length) {\n        console.log(\"Anjali remote call doesn't have length\");\n        this.remoteCalls.push(id);\n        setTimeout(() => stream.play(id), 1000);\n      }\n    });\n\n    this.client.on(ClientEvent.RemoteStreamRemoved, evt => {\n      const stream = evt.stream as Stream;\n      if (stream) {\n        stream.stop();\n        this.remoteCalls = [];\n        console.log(`Remote stream is removed ${stream.getId()}`);\n      }\n    });\n\n    this.client.on(ClientEvent.PeerLeave, evt => {\n      console.log(\"peer leave anjali\");\n      const stream = evt.stream as Stream;\n      if (stream) {\n        stream.stop();\n        this.remoteCalls = this.remoteCalls.filter(call => call !== `${this.getRemoteId(stream)}`);\n        console.log(`${evt.uid} left from this channel`);\n      }\n    });\n  }\n\n  private assignLocalStreamHandlers(): void {\n    this.localStream.on(StreamEvent.MediaAccessAllowed, () => {\n      console.log('accessAllowed');\n    });\n\n    // The user has denied access to the camera and mic.\n    this.localStream.on(StreamEvent.MediaAccessDenied, () => {\n      console.log('accessDenied');\n    });\n  }\n\n  private initLocalStream(onSuccess?: () => any): void {\n    this.localStream.init(\n      () => {\n        // The user has granted access to the camera and mic.\n        this.localStream.play(this.localCallId);\n        if (onSuccess) {\n          onSuccess();\n        }\n      },\n      err => console.error('getUserMedia failed', err)\n    );\n  }\n\n  private getRemoteId(stream: Stream): string {\n    return `agora_remote-${stream.getId()}`;\n  }\n}\n","<p>video-conference works!</p>\n<div [id]=\"localCallId\" class=\"local\"></div>\nlocalCAllId = {{localCallId}}\n\ndiv2 for main\n\n<div *ngFor=\"let callId of remoteCalls\" [id]=\"callId\" class=\"remote\">\n    <span> callIfsss  -- {{callId}}</span>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n// Must import to use Forms functionality  \nimport { FormBuilder, FormGroup, Validators,NgForm } from '@angular/forms'; \nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-welcome-page-form',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.css']\n})\nexport class WelcomePageComponent implements OnInit {\n\n    welcomeForm: FormGroup;  \n\n    constructor(private fb: FormBuilder, private router:Router) { \n        this.welcomeForm = fb.group({  \n            'userName' : [null, Validators.required],\n            'password' : [null, Validators.required]   \n          });\n\n    }\n    ngOnInit() {\n        \n    }\n    onFormSubmit(form:NgForm){\n        console.log(form); \n    }\n\n    goToStudentRegistration(){\n      console.log(\"registration\");\n      this.router.navigateByUrl('/registerStudent');\n    }\n   \n}","<div class=\"alignMatCard marginTop\">\n    <mat-card style=\"text-align: center;\" class=\"matCardBorder\">\n        <mat-card-title class=\"formHeading\">\n            Login\n        </mat-card-title>\n        <mat-card-content>\n            <div class=\"container textAlignCenter\">\n                <form [formGroup]=\"welcomeForm\" (ngSubmit)=\"onFormSubmit(welcomeForm.value)\" class=\"form\">\n                    <div class=\"textAlignCenter\">\n                        <mat-form-field class=\"form-element\">\n                            <mat-label>User Name</mat-label>\n                            <input matInput placeholder=\"User Name\" formControlName=\"userName\">\n                            <mat-error\n                                *ngIf=\"!welcomeForm.controls['userName'].valid && welcomeForm.controls['userName'].touched\">\n                                Please enter User Name\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"form-element\">\n                            <mat-label>Password</mat-label>\n                            <input matInput placeholder=\"Password\" formControlName=\"password\">\n                            <mat-error\n                                *ngIf=\"!welcomeForm.controls['password'].valid && welcomeForm.controls['password'].touched\">\n                                Please enter Password\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-element\">\n                        <button mat-button mat-raised-button color=\"primary\" type=\"submit\"\n                            [disabled]=\"!welcomeForm.valid\" class=\"buttonAlign\"> Login</button>\n                        <button mat-button mat-raised-button color=\"primary\" type=\"button\"\n                            (click)=\"goToStudentRegistration()\" class=\"buttonAlign\">Register</button>\n                    </div>\n\n                </form>\n            </div>\n        </mat-card-content>\n    </mat-card>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  agora: {\n    appId: 'fdf46fa0ae084613a77d701410599dd9'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}